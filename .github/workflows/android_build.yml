name: Android Build CI - APK 
run-name: Deployed by @${{ github.actor }}
on:
  workflow_dispatch:
  push:
    branches: [ "main", "develop"]
  pull_request:
    branches: [ "main", "develop"]
    types: [labeled, opened, synchronize, reopened] #Security meassure

env:
  CONDITIONAL_BRANCH_DEV: "refs/heads/develop"
  CONDITIONAL_BRANCH_MAIN: "refs/heads/main"

jobs:
  #flutter_unit_test:
  #  uses: ./.github/workflows/flutter_unit_test.yml
    
  build:
    name: Android Flutter Build
    #needs: [flutter_unit_test]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.3.0
        
      - name: Verify run id
        run : echo Run Id $GITHUB_RUN_ID

      - name: Output the source branch name
        run: echo ${{ github.event.pull_request.head.ref }}

      - name: Output the destination branch name
        run: echo ${{ github.event.pull_request.base.ref }}

      - name: Decode Keystore
        env:
            ENCODED_STRING: ${{ secrets.KEYSTORE_BASE64}}
        run: |
            pwd
            TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
            mkdir "${TMP_KEYSTORE_FILE_PATH}"
            echo $ENCODED_STRING | base64 --decode > "${TMP_KEYSTORE_FILE_PATH}"/pragmaAppKeystore.jks
      - name: Create key.properties
        env:
            STORE_PASSWORD_DEBUG: ${{ secrets.STORE_PASSWORD_DEBUG}}
            KEY_PASSWORD_DEBUG: ${{ secrets.KEY_PASSWORD_DEBUG}}
            KEY_ALIAS_DEBUG: ${{ secrets.KEY_ALIAS_DEBUG}}
        run: |
          pwd
          echo "storeFile=${RUNNER_TEMP}/keystore/pragmaAppKeystore.jks"  >> android/key.properties
          echo "storePassword=${STORE_PASSWORD_DEBUG}" >> android/key.properties
          echo "keyPassword=${KEY_PASSWORD_DEBUG}" >> android/key.properties
          echo "keyAlias=${KEY_ALIAS_DEBUG}" >> android/key.properties

      - name: Setup Java JDK
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.10.5
          cache: true

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            build/
            android/.gradle/
          key: ${{ runner.os }}-pragma_app-${{ hashFiles('**/*.gradle*', 'pubspec.lock') }}

      - name: Flutter Pub Get
        run: |
          flutter pub get
          flutter clean

      - name: Build Android App
        if: ${{ github.ref != env.CONDITIONAL_BRANCH_MAIN }}
        run: |
          flutter build apk --release --verbose

      - name: Build Android app (release mode)
        if: ${{github.ref == env.CONDITIONAL_BRANCH_MAIN}}
        run: |
          flutter build appbundle --release --verbose  --no-pub
      
      - name: App Center - NodeJS
        if: ${{ endsWith(github.ref, env.CONDITIONAL_BRANCH_DEV) }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.13.0

      - name: App Center - Alpha
        if: ${{ endsWith(github.ref, env.CONDITIONAL_BRANCH_DEV) }}
        run: |
          npm install -g appcenter-cli
          appcenter distribute release \
          --app Pragma-Aleteo/PragmaApp-Android \
          --file build/app/outputs/flutter-apk/app-release.apk \
          --group Testers \
          --token ${{secrets.APP_CENTER_TOKEN}} \
          --debug
